{"version":3,"sources":["logo.svg","imgs/Regulamento_intefrotas_go.pdf","imgs/logo-final.png","forms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Forms","enviaForm","event","preventDefault","console","log","state","b","user_name","nome","contact_number","telefone","user_email","email","message","mensagem","emailjs","send","setState","open","handleShow","handleClose","setOpen","setNome","bind","setEmail","setTelefone","setMensagem","this","target","value","className","style","minHeight","minWidth","padding","paddingRight","paddingLeft","src","require","width","marginTop","marginRight","marginLeft","margin","marginBottom","class","onSubmit","onChange","required","type","data-toggle","data-target","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","height","color","Component","App","exact","path","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86ce2153.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Regulamento_intefrotas_go.1d31288c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo-final.c0b8d3ad.png\";","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Header,Body, Modal, Footer } from 'react-bootstrap';\nimport emailjs from 'emailjs-com';\nimport Pdf from './imgs/Regulamento_intefrotas_go.pdf';\nclass Forms extends Component {\n\n    constructor() {\n      super();\n      this.state = {nome:' ',email:'',telefone:'',mensagem:'',open:false};\n      this.setNome = this.setNome.bind(this);\n      this.setEmail = this.setEmail.bind(this);\n      this.setOpen = this.setOpen.bind(this);\n      this.setTelefone = this.setTelefone.bind(this);\n      this.setMensagem = this.setMensagem.bind(this);\n      this.setMensagem = this.setMensagem.bind(this);\n      this.enviaForm = this.enviaForm.bind(this);\n    }\n    \n    setNome(event){\n        this.setState({nome:event.target.value})\n        console.log(this.state)\n      }\n  \n    setOpen(event){\n      this.setState({open:event})\n      console.log(this.state)\n      }\n  \n    setEmail(event){\n        this.setState({email:event.target.value})\n        console.log(this.state)\n    }\n\n    setTelefone(event){\n        this.setState({telefone:event.target.value})\n        console.log(this.state)\n        }\n    \n    setMensagem(event){\n        this.setState({mensagem:event.target.value})\n        console.log(this.state)\n        }\n            \n    enviaForm = (event) => {\n        event.preventDefault()\n        console.log(\"news\",this.state)\n        var b = {user_name:this.state.nome, contact_number:this.state.telefone, user_email:this.state.email, message:this.state.mensagem}\n        const templateId = 'template_5qNZHx7h';\n        const service_id = 'interfrotas_go';\n        emailjs.send(service_id,\n        templateId,\n        b,\n        'user_iudU7Sw5UdgWNvhovPqkZ'\n        )\n        this.setState({nome:' ',email:'',telefone:'',mensagem:''})\n        console.log(this.state.open)\n        this.handleShow(event)\n    }      \n    \n    handleClose = () => this.setOpen(false);\n    handleShow = () => this.setOpen(true);\n\n    render() {\n\n      return (\n        <div className=\"container-fluid \" style={{minHeight: \"100%\", minWidth:\"100%\", padding:'0', paddingRight:\"15px\", paddingLeft:\"15px\"}} >\n          <div className=\"row col1 h-100\">\n            <div className=\"col\" style={{padding:'0'}}>\n              <img src={require('./imgs/logo-final.png')} width=\"300px\" className=\"logo\"/>\n            </div>\n            <div className=\"col-sm \" style={{marginTop:\"8%\", marginRight:\"10px\", marginLeft:\"10px\"}} >\n              <div className=\"row  align-middle align-self-center\">\n                <div className=\"inputs-form \">\n                  <div style={{padding:\"10px\"}}>\n                    <div style={{margin:\"20px 5px\",marginBottom:\"0px\"}}>\n                      <p className=\"subtitle\">CADASTRE-SE PARA RECEBER MAIS INFORMAÇÕES SOBRE O CARRO POR ASSINATURA DA INTER FROTAS GO!</p>\n                      <div class=\"line\"></div>\n                    </div>\n                    <form onSubmit={this.enviaForm} className=\" forms\">\n                      <div class=\"form-group input-div\">\n                        <label>NOME</label>\n                        <textarea class=\"form-control input1\" onChange={this.setNome} required value={this.state.nome}/>\n                      </div>\n                      <div class=\"form-group input-div\">\n                        <label>EMAIL</label>\n                        <textarea class=\"form-control input1\"  onChange={this.setEmail} required value={this.state.email}/>\n                      </div>\n                      <div class=\"form-group input-div\">\n                        <label>TELEFONE</label>\n                        <textarea class=\"form-control input1\"  onChange={this.setTelefone} required value={this.state.telefone}/>\n                       </div>\n                      <div class=\"form-group input-div\">\n                        <label>MENSAGEM</label>\n                        <textarea class=\"form-control\"  onChange={this.setMensagem} required value={this.state.mensagem}/>\n                      </div>\n                      <div className=\"justify-content-center d-flex\" >\n                        <button className=\"btn1\"type='submit'  data-toggle=\"modal\" data-target=\"#exampleModal\">ENVIAR</button>\n                      </div>\n                    </form>\n                    <Modal show={this.state.open} onHide={this.handleClose}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Obrigado!!</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>Você terá mais informações sobre nosso produto em breve!</Modal.Body>\n                      <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                          Fechar\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                  </div>\n                </div>\n            <div className=\"row\" style={{marginTop:\"10px\",height:\"100%\",marginLeft:\"10px\", color:\"white\"}}>\n             </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n}\nexport default Forms","import React from 'react';\nimport {Switch, Route, withRouter } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Forms from './forms'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"container-fluid vh-100 bg\"  style={{padding:'0'}}>\n      <div  className=\"container-sm-fluid\"  style={{minHeight: \"100%\", minWidth:\"100%\"}}>\n      <Switch>\n        <Route exact path='/' render={(props) => <Forms {...props}/>}/>\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n                        \n                     ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter><App className=\"w-100\" /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}